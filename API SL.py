import ssl
import suds
import datetime

try:
    _create_unverified_https_context = ssl._create_unverified_context
except AttributeError:
    pass
else:
    ssl._create_default_https_context = _create_unverified_https_context

#data=datetime.datetime.strptime('2019-07-01','%Y-%m-%d').isoformat()

def main():
    while True:
        metoda=int(input("Wybierz metodę\n1 - MaterialAllOfflineGetStock\n2 - MaterialOfflineGetStock\n3 - MaterialGetStock\n"))
        if metoda==1:
            MaterialAllOfflineGetStock()
        if metoda==2:
            MaterialOfflineGetStock()
        if metoda==3:
            MaterialGetStock()

def pobranie_ilosci_stron(metoda,parms):
    results=eval(r'suds.basestring(client.service.{}({})).split("\n")'.format(metoda,parms))
    ilosc_stron=int(results[3][results[3].find('=')+1:])
    return ilosc_stron

def MaterialAllOfflineGetStock():
    pages=pobranie_ilosci_stron('MaterialAllOfflineGetStockInfo',parms={'GroupedCodeType':'p'})
    symkar=input("Podaj Symkar: ").replace(" ","")
    i=1
    flag=0
    while i<=pages and flag<2:
        parms={'Page':i,'GroupedCodeType':'p'}
        results=suds.basestring(client.service.MaterialAllOfflineGetStock(parms)).split(",")
        for result in results:
            if result.find(symkar) != -1:
                flag+=1
                print("Jestem na stronie: {}/{}\n".format(i,pages))
                print(result,'\n')
        i+=1
    else:
        print("Koniec działania programu")

def MaterialOfflineGetStock():
    data=datetime.datetime.strptime(input("Podaj datę w formacie YYYY-MM-DD: "),'%Y-%m-%d').isoformat()
    pages=pobranie_ilosci_stron('MaterialOfflineGetStockInfo',parms={'DateFrom':data,'GroupedCodeType':'p'})
    symkar=input("Podaj Symkar: ").replace(" ","")
    i=1
    flag=0
    while i<=pages and flag<2:
        parms={'DateFrom':data,'Page':i,'GroupedCodeType':'p'}
        results=suds.basestring(client.service.MaterialOfflineGetStock(parms)).split(",")
        for result in results:
            if result.find(symkar) != -1:
                flag+=1
                print("Jestem na stronie: {}/{}\n".format(i,pages))
                print(result,'\n')
        i+=1
    else:
        print("Koniec działania programu")

def MaterialGetStock():
    symkar=input("Podaj Symkar: ").replace(" ","")
    i=1
    while i<=2:
        parms={'MaterialCode':symkar}
        results=suds.basestring(client.service.MaterialGetStock(parms))
        print("\n",results,"\n")

def test():
    pages=pobranie_ilosci_stron('MaterialAllOfflineGetStockInfo')
    listasplit(",")
    for list in lista:
        print("Symkar: ",list)
        i=1
        flag=0
        while i<=pages and flag<2:
            parms={'Page':i,'GroupedCodeType':'p'}
            results=suds.basestring(client.service.MaterialAllOfflineGetStock(parms)).split(",")
            for result in results:
                if result.find(list) != -1:
                    flag+=1
                    print(result,'\n')
            i+=1

url=r"https://10.1.1.15/ERP_PROD_PROD/services_integration_api/ApiWebService.ashx?wsdl&DBC=ECOM_PROD"
client=suds.Client(url,timeout=999999)
main()

